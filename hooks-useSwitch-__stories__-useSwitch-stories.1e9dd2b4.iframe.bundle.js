"use strict";(globalThis.webpackChunkmonday_ui_react_core=globalThis.webpackChunkmonday_ui_react_core||[]).push([[6782],{"./src/hooks/useSwitch/__stories__/useSwitch.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,Disabled:()=>Disabled,Overview:()=>Overview,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("../../node_modules/react/index.js");var _index__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/hooks/useSwitch/index.ts"),_components__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/Flex/Flex.tsx"),_components__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/components/Toggle/Toggle.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Hooks/useSwitch"};var Overview={render:function render(){var _useSwitch=(0,_index__WEBPACK_IMPORTED_MODULE_2__.Z)(),isChecked=_useSwitch.isChecked,onChange=_useSwitch.onChange;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components__WEBPACK_IMPORTED_MODULE_3__.Z,{direction:_components__WEBPACK_IMPORTED_MODULE_3__.Z.directions.COLUMN,align:_components__WEBPACK_IMPORTED_MODULE_3__.Z.align.START,gap:_components__WEBPACK_IMPORTED_MODULE_3__.Z.gaps.MEDIUM,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components__WEBPACK_IMPORTED_MODULE_4__.Z,{onChange,isSelected:isChecked}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("code",{children:["isChecked: ",isChecked.toString()]})]})},name:"Overview"},Disabled={render:function render(){var _useSwitch2=(0,_index__WEBPACK_IMPORTED_MODULE_2__.Z)({isDisabled:!0}),isChecked=_useSwitch2.isChecked,onChange=_useSwitch2.onChange;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components__WEBPACK_IMPORTED_MODULE_3__.Z,{direction:_components__WEBPACK_IMPORTED_MODULE_3__.Z.directions.COLUMN,align:_components__WEBPACK_IMPORTED_MODULE_3__.Z.align.START,gap:_components__WEBPACK_IMPORTED_MODULE_3__.Z.gaps.MEDIUM,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components__WEBPACK_IMPORTED_MODULE_4__.Z,{onChange,isSelected:isChecked}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("code",{children:["isChecked: ",isChecked.toString()]})]})},name:"Disabled"},Default={render:function render(){var _useSwitch3=(0,_index__WEBPACK_IMPORTED_MODULE_2__.Z)({defaultChecked:true}),isChecked=_useSwitch3.isChecked,onChange=_useSwitch3.onChange;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components__WEBPACK_IMPORTED_MODULE_3__.Z,{direction:_components__WEBPACK_IMPORTED_MODULE_3__.Z.directions.COLUMN,align:_components__WEBPACK_IMPORTED_MODULE_3__.Z.align.START,gap:_components__WEBPACK_IMPORTED_MODULE_3__.Z.gaps.MEDIUM,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components__WEBPACK_IMPORTED_MODULE_4__.Z,{onChange,isSelected:isChecked}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("code",{children:["isChecked ",isChecked.toString()]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("code",{children:["defaultChecked: ",true.toString()]})]})},name:"Default"};Overview.parameters={...Overview.parameters,docs:{...Overview.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    const {\n      isChecked,\n      onChange\n    } = useSwitch();\n    return <Flex direction={Flex.directions.COLUMN} align={Flex.align.START} gap={Flex.gaps.MEDIUM}>\n        <Toggle onChange={onChange} isSelected={isChecked} />\n        <code>isChecked: {isChecked.toString()}</code>\n      </Flex>;\n  },\n  name: "Overview"\n}',...Overview.parameters?.docs?.source}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    const {\n      isChecked,\n      onChange\n    } = useSwitch({\n      isDisabled: true\n    });\n    return <Flex direction={Flex.directions.COLUMN} align={Flex.align.START} gap={Flex.gaps.MEDIUM}>\n        <Toggle onChange={onChange} isSelected={isChecked} />\n        <code>isChecked: {isChecked.toString()}</code>\n      </Flex>;\n  },\n  name: "Disabled"\n}',...Disabled.parameters?.docs?.source}}},Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    const defaultChecked = true;\n    const {\n      isChecked,\n      onChange\n    } = useSwitch({\n      defaultChecked\n    });\n    return <Flex direction={Flex.directions.COLUMN} align={Flex.align.START} gap={Flex.gaps.MEDIUM}>\n        <Toggle onChange={onChange} isSelected={isChecked} />\n        <code>isChecked {isChecked.toString()}</code>\n        <code>defaultChecked: {defaultChecked.toString()}</code>\n      </Flex>;\n  },\n  name: "Default"\n}',...Default.parameters?.docs?.source}}};const __namedExportsOrder=["Overview","Disabled","Default"]}}]);